*,
*::before,
*::after {
    box-sizing: border-box;
}
html, 
body,
#bg-container,
#table-container {
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}
body {
    background-image: url(./assets/body/bg.jpg);
}

a {
    text-decoration: none;
}

/* Game Viewport */

#bg-container {
    height: 93vh;
    width: 70vw;
    border-radius: 1.5rem;
    background-image: radial-gradient(black, rgb(52, 52, 52), black);
    box-shadow: 0 0 2rem rgb(0, 0, 0);
}
#table-container {
    height: 95%;
    width: 95%;

    border-radius: 1.5rem;
    background-image: url(./assets/body/bg-table-main.svg);
    background-size: cover;
    background-position: top;
    overflow: hidden;

    display: grid;
    grid-template-columns: repeat(12, 1fr);
    grid-template-rows: repeat(12, 1fr);
}

/* Header */ 

header,
header ul {
    padding: 2rem 1rem;
    width: 100%;
}
header {
    grid-row: 8 / span 4;
    grid-column: 1 / span 12;
}
header ul {
    display: flex;
    flex-flow: row wrap;
    justify-content: space-evenly;
    align-items: baseline;
    margin-top: 5rem;

    background-image:  linear-gradient(
        45deg, 
        black,
        rgb(23, 23, 23), 
        rgb(40, 40, 40), 
        rgb(23, 23, 23), 
        black);
    background-size: cover;
    background-position: center;
    opacity: 90%;
    box-shadow: 0 .3rem .6rem rgb(0, 0, 0);
    border-radius: 1.25rem;
}


/* Header ul elements */
header ul button {
    background-color: transparent;
    border: none;
}
/* Trick: underline widening effect on hover */
.nav-item {
    /* 
    - Establish the element as a reference point for absoloutely positioned child.
    - In this case child element is '::after' pseudo element itself.
     */
    position: relative;
    display: inline-block; /* Control over stacking */
    padding: .6rem 1rem;

    color: rgba(206, 204, 204, 0.952);
    font-size: 1.12rem;
    cursor: pointer;

    border-bottom: 2px solid transparent;
    transition: border-color 0.3s ease, scale 0.3s ease;
}

.nav-item::after {
    /* 
    - "content: ''; "  is required for the pseudo-element to be generated. 
    - It specifies what content goes inside the pseudo-element (like a text or an image).
    */
    content: '';
    position: absolute; /* Position the underline */
    height: 2px; /* Underline thickness */
    width: 0; /* Initial state for the animation. Allows to create underline growing effect. */
    left: 50%; /* Initially centering the underline. With 'width: 0;' places underline starting point at the center of the element.*/
    bottom: 0; /* Set the underline right at the bottom of an element. */
    background-color: rgba(206, 204, 204, 0.952);
    transition: width 0.3s ease, left 0.3s ease; /* Animate width and horizontal position */
  
}

.nav-item:hover::after {
    width: 100%; /* Fully expanding the underline */
    left: 0;
    /* 
    'left: 0;' ensures that the growth of the underline appears to speread out symmetrically from the center to the sides.

    - Initially 'left' is set to '50%', positioning start of the '::after' pseudo-element in the center of the parent, with the width at '0'.
    - 'left' to '0' shifts the starting position to the left edge of the element.
    - Combined with 'width: 100%;' creates growth of the underline to the both sides.
     */
}

.nav-item:active {
    transform: scale(1.1);
}
.play-btn {
    font-size: 1.6rem;
}




























/* General */

.hidden {
    display: none;
}