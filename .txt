pushing a new URL; the second argument is unused

history.pushState(optional_state, null, '/new-url')


to listen for changes in URL within the same page navigation
window.addEventListener("popstate", event => {
 let url = location.href;
});












/* General */
input:focus-visible + label::before{
  outline: 1px solid rgb(69, 10, 10);
}


th button:active {
  background-image: linear-gradient(rgba(44, 32, 32, 0.911), 
                                    rgba(49, 25, 25, 0.91), 
                                    rgba(38, 24, 24, 0.886), 
                                    rgba(34, 17, 17, 0.847));
}





.filter-dialog form {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  grid-template-rows: repeat(6, 1fr);
}

form h2 {
  grid-column: 1 / span 4;
  grid-row: 1;
  margin: auto;

  font-weight: bolder;
  font-size: 1.1rem;
}
legend {
  margin-bottom: .5rem;
  font-weight: bold;
}
form fieldset {
  grid-column: 1 / span 6;
  grid-row: 2;

  display: flex;
  flex-flow: row;
  justify-content: space-between
}
label[for="game-outcome"] {
  grid-column: 1 / span 3;
  grid-row: 3;
}
#game-outcome {
  grid-column: 3 / span 3;
  grid-row: 3;
  margin-left: 2rem;

  height: 1.5rem;
}
label[for="insurance-taken"] {
  grid-column: 1 / span 4;
  grid-row: 4;
}
#insurance-taken {
  grid-column: 4;
  grid-row: 4;
}
label[for="even-money-taken"] {
  grid-column: 1 / span 4;
  grid-row: 5;
}
#even-money-taken {
  grid-column: 4;
  grid-row: 5;
}
#submit-filter-form {
  grid-column: 4 / span 2;
  grid-row: 6;

  width: 4rem;
  height: 2rem;

  font-size: 1rem;
  border: 1px solid transparent;
  border-radius: .5rem;
  background-image: linear-gradient(rgba(52, 38, 38, 0.978), 
                                    rgba(60, 31, 31, 0.966), 
                                    rgba(46, 29, 29, 0.959), 
                                    rgba(39, 19, 19, 0.968));
  box-shadow: 0 0 .3rem #1b0b0b;                
}

/* Checkbox */
/* Hide checkboxes (boxes itself) */
input[type="checkbox"].toggle {
    opacity: 0;
    pointer-events: none;
    position: absolute;
}


/* toggle checkboxe - slider */
input[type="checkbox"].toggle + label {
  display: flex;
  flex-direction: row-reverse;
  align-items: center;
  position: relative;
}
input[type="checkbox"].toggle + label::before {
  content: "";
  width: 2rem;
  height: 1rem;
  background-image: linear-gradient(rgb(228, 173, 173),
                                    rgb(235, 198, 198),
                                    rgb(200, 161, 161),
                                    rgb(173, 125, 125));
  border-radius: 5rem;
  border-color: rgb(0, 0, 0);
  margin-left: .8rem;
}
input[type="checkbox"].toggle + label::after {
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  color:  rgb(235, 209, 209);
  content: "\2715";
  font-size: .5rem;
  right: 1rem; /*  */
  width: .9rem;
  height: .9rem;
  background-color: rgb(201, 27, 27);
  background-image: linear-gradient(rgb(206, 2, 2), 
                                    rgb(195, 19, 19), 
                                    rgb(185, 11, 11), 
                                    rgb(167, 9, 9));
  box-shadow: 0px 0px 2.5px 0px rgb(201, 27, 27);
  border-radius: 5rem;
  transition: 200ms ease-in-out;
}
input[type="checkbox"].toggle:checked + label::before {
  background-image: linear-gradient(rgba(186, 237, 196, 0.896),
                                    rgba(215, 243, 214, 0.916),
                                    rgba(174, 216, 174, 0.937),
                                    rgba(135, 185, 142, 0.979));
}
input[type="checkbox"].toggle:checked + label::after {
  right: .1rem; /*  */
  background-image: linear-gradient(rgb(9, 163, 17), 
                                    rgb(22, 180, 54), 
                                    rgb(14, 158, 38), 
                                    rgb(9, 122, 18));
  box-shadow: 0 0 2.5px 0 rgb(47, 139, 59);
  animation: check-fade 400ms ease-in-out forwards;
}
@keyframes check-fade {
  0% {
      opacity: 1;
      content: "\2715";
  }
  50% {
      opacity: 0;
      content: "\2715";
  }
  100% {
      opacity: 1;
      content: "\2713";
  }
}
.............
// temp start
import DialogManager from "./src/DialogManager.js";
const openDialogBtns = document.querySelectorAll('.dialog-btn');
const dialogBoxes = document.querySelectorAll('.dialog-box');
const closeDialogBtns = document.querySelectorAll('.close-dialog-btn');

const datasetCloseAction = 'close-dialog';
const closingAnimation = 'dialog-closing';

new DialogManager({openDialogBtns, dialogBoxes, closeDialogBtns}, {datasetCloseAction, closingAnimation});
// temp end
.......








............................................
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Blackjack</title>
    <link href="/assets/svg-icons/favicon.svg" rel="icon">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Bitter:ital,wght@0,100..900;1,100..900&family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&family=Montserrat:ital,wght@0,100..900;1,100..900&family=Noto+Serif+Georgian:wght@100..900&family=Playfair+Display:ital,wght@0,400..900;1,400..900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap" rel="stylesheet">
    <link href="reset.css" rel="stylesheet">
    <link href="index.css" rel="stylesheet">
    <script src="app.js" type="module" defer></script>
</head>
<body>
    <header>
        <section class="profile-page">
            <img src="/assets/svg-icons/home-logo.svg" alt="Avatar image" class="avatar">
            <a href="profile" class="profile-page-link" alt="Log in link">Log In</a>
            <!-- Alt will change with alt="Profile page link" -->
        </section>
        <section class="current-bank">
            <h2>Bank:</h2>
            <img src="/assets/svg-icons/coin.svg" alt="Coin icon"/> 
            <span class="current-bank-amount" aria-live="polite">    
                2500
            </span>
        </section>
        <a href="/" class="home-link"aria-label="Home" >
            <img src="/assets/svg-icons/home-logo.svg" alt="Home" class="home-logo">
        </a>
        <div class="rules-dialog-container" data-id="rules">
            <button class="rules-btn dialog-btn" data-id="rules" aria-haspopup="dialog" aria-expanded="false">
                Rules
            </button>
            <dialog class="rules-dialog dialog-box" data-id="rules">
                <section class="goal">
                    <h2>Goal</h2>
                    <p>The goal is to beat the dealer's hand without going over 21.</p>
                </section>
                <section class="initial-deal">
                    <h2>Initial Deal</h2>
                    <p>Each player starts with two cards. The dealer has one card face up (the upcard) and one card face down (the hole card).</p>
                </section>
                <section class="card-value-rules">
                    <h2 class="card-values">Card Values</h2>
                    <ul>
                        <li>
                            <i>Number cards</i>
                            <p>Worth their face value.</p>
                        </li>
                        <li>
                            <i>Face cards (Kings, Queens, Jacks)</i>
                            <p>Worth 10 points.</p>
                        </li>
                        <li>
                            <i>Ace</i>
                            <p>Worth 1 or 11 points, whichever benefits the player.</p>
                        </li>
                    </ul>
                </section>
                <section class="playing-rules">
                    <h2>Playing a Round</h2>
                    <ul>
                        <li>
                            <i>Hit</i>
                            <p>Take another card from the dealer.</p>
                        </li>
                        <li>
                            <i>Stand</i>
                            <p>Keep your current hand and end your turn.</p>
                        </li>
                        <li>
                            <i>Double Down</i>
                            <p>Double your bet, take one more card, and then stand.</p>
                        </li>
                        <li>
                            <i>Split</i>
                            <p>If your first two cards have the same value, you can split them into two separate hands (requires an additional bet equal to the first).</p>
                        </li>
                        <li>
                            <i>Insurance</i>
                            <p>If the dealer's upcard is an Ace, players can take "insurance," a side bet up to half the original bet, which pays 2:1 if the dealer has Blackjack.</p>
                        </li>
                    </ul>
                </section>
                <section class="outcome-rules">
                    <h2>Outcome Scenarios</h2>
                    <ul>
                        <li>
                            <i>Blackjack</i>
                            <p>If you get a "Blackjack" (an Ace and a 10-point card) as your first two cards, you win 1.5 times your bet, unless the dealer also has Blackjack, in which case it's a "push" (tie).</p>
                        </li>
                        <li>
                            <i>Win</i>
                            <p>If your hand is closer to 21 than the dealer's, you win your bet.</p>
                        </li>
                        <li>
                            <i>Lose</i>
                            <p>If the dealer's hand goes over 21, all active players win their bets.</p>
                        </li>
                        <li>
                            <i>Push</i>
                            <p>If your hand goes over 21, you "bust" and lose your bet, regardless of the dealer's hand.</p>
                        </li>
                    </ul>
                </section>
                <button class="close-dialog-btn" data-id="rules" data-action-type="close-dialog">Close</button>
            </dialog>
        </div>
     
        <div class="settings-dialog-container" data-id="settings">
            <button class="settings-btn dialog-btn" data-id="settings" aria-haspopup="dialog" aria-expanded="false">
                Settings <img src="/assets/svg-icons/settings.svg" alt=""/>
            </button>
            <dialog class="settings-dialog dialog-box" data-id="settings">
                <input type="checkbox" id="toggle-sound" class="toggle-sound-music sound-music" aria-label="Toggle sound">
                <label for="toggle-sound" class="label-sound sound-music">
                    <img src="/assets/svg-icons/sound-on.svg" id="sound-on" class="sound-music" alt="Sound on">
                    <img src="/assets/svg-icons/sound-off.svg" id="sound-off" class="sound-music" alt="Sound off">
                    Sound
                </label>

                <input type="checkbox" id="toggle-music" class="toggle-sound-music sound-music" aria-label="Toggle music">
                <label for="toggle-music" class="label-music sound-music">
                    <img src="/assets/svg-icons/music-on.svg" id="music-on" class="sound-music" alt="Music on">
                    <img src="/assets/svg-icons/music-off.svg" id="music-off" class="sound-music" alt="Music off">
                    Music
                </label>
 
                <fieldset class="deck-list">
                    <legend>Number of Decks</legend>

                    <input type="radio" id="deck1" name="deck-number" value="1">
                    <label for="deck1">1</label>

                    <input type="radio" id="deck2" name="deck-number" value="2" checked>
                    <label for="deck2">2</label>

                    <input type="radio" id="deck4" name="deck-number" value="4">
                    <label for="deck4"> 4</label>

                    <input type="radio" id="deck6" name="deck-number" value="6">
                    <label for="deck6"> 6</label>

                    <input type="radio" id="deck8" name="deck-number" value="8">
                    <label for="deck8">8</label>
                </fieldset>
                    
                <input type="checkbox" id="soft-17-opt" role="switch" class="toggle">
                <label for="soft-17-opt">Dealer hits on soft 17 </label>

                <input type="checkbox" id="insurance-opt" role="switch" class="toggle">
                <label for="insurance-opt">Insurance </label>

                <input type="checkbox" id="even-money-opt" role="switch" class="toggle">
                <label for="even-money-opt">Even Money </label>

                <input type="checkbox" id="auto-advice-opt" role="switch" class="toggle">
                <label for="auto-advice-opt">Auto Advice </label>

                <input type="checkbox" id="repeat-last-bet-opt" role="switch" class="toggle">
                <label for="repeat-last-bet-opt">Repeat Last Bet </label>
                <p class="warning-about-settings">Changes in game apply on next deal!</p>

                <button class="close-dialog-btn" data-id="settings" data-action-type="close-dialog">Close</button>
            </dialog>
        </div>

    </header>
    <main class="initial-layout">
        <div class="game-logo"><img src="/assets/svg-icons/game-logo.svg"></div>
        <button class="play">Play</button>
    </main>
</body>
</html>





























///////////////////////////////////////////////////

*,
*::before,
*::after {
    box-sizing: border-box;
}
* {
    font-family: "Noto Serif Georgian", serif;
}
html {
    background-image: url(/assets/svg-icons/table-background.svg);
}
/* General */
body {
    margin: auto;
    height: 100vh;
    max-width: 900px;
    border: 2px solid black;
    border-radius: 10px;
    box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.5);
    background-size: cover;
    font-weight: bold;
}
ul {
    list-style-type: none;
}   
.profile-page,
.current-bank,
.home-link,
button {
    border-radius: .5rem;
    border: 1px solid rgb(119, 161, 55);
}
.profile-page:hover {
    text-decoration: underline;
}
.profile-page:active,
.home-link:active,
button:active {
    transform: scale(1.03);
}
button,
.sound-music,
input[type="checkbox"].toggle + label,
input[type="radio"] + label {
    cursor: pointer;
}
input[type="checkbox"]#toggle-sound:focus-visible + label[for="toggle-sound"] img,
input[type="checkbox"]#toggle-music:focus-visible + label[for="toggle-music"] img,
input[type="checkbox"].toggle:focus-visible + label::before,
input[type="checkbox"].toggle-sound-music:focus-visible + label::before,
input[type="radio"]:focus-visible + label {
    outline: 1px solid black;
}
/* Hardware acceleration */
dialog {
    transform: translateZ(0);
    backface-visibility: hidden;
    perspective: 1000px;
}

/* 
display: flex; makes dialog box always visible.
This code ensures that dialog box stays hidden until 'settings' or 'rules' button is clicked.
*/
.rules-dialog:not([open]),
.settings-dialog:not([open]) {
    display: none;
}
.rules-dialog,
.settings-dialog {
    background-image: linear-gradient(rgb(198, 243, 131), rgb(185, 230, 119), rgb(171, 209, 114), rgb(193, 243, 118));
    border: 1px solid rgb(170, 202, 121);
    border-radius: .7rem;
    box-shadow: 0 0 .1rem rgb(148, 228, 27);

    animation: open-dialog-box 150ms ease-in forwards;
}
@keyframes open-dialog-box {
    0% {
        opacity: 0;
        transform: scale(0.5);
        visibility: hidden; 
    }
    100% {
        opacity: 1;
        transform: scale(1);
        visibility: visible;
    }
}
/* Header */
header {
    display: flex;
    flex-flow: row wrap;
    justify-content: space-evenly;
    margin-top: 1.5rem;
}
header img {
    width: 1rem;
    margin: 0 .13rem;
}
.avatar,
.home-logo {
    width: 1.7rem;
}
.home-link,
.profile-page,
header button {
    min-width: 6rem;
    height: 2rem;
    font-weight: bold;
    background-image: linear-gradient(rgb(155, 219, 58), rgb(177, 241, 80), rgb(117, 167, 42));
}
.profile-page {
    display: flex;
    padding: 0 .2rem;
}
.profile-page-link {
    text-decoration: none;
    color: black;
    margin: .4rem 0 0 .5rem;
}
.current-bank {
    display: flex;
    height: 1.95rem;
    padding: .4rem .3rem .3rem .3rem;
    background-image: linear-gradient(rgb(22, 155, 172), rgb(10, 202, 202), rgb(17, 153, 216));
    border-color: rgb(9, 147, 211);
}
.home-link {
    display: flex;
    justify-content: center;
}

/* Settings Button and dialog box */
.settings-dialog {
    top: 13%;
    left: 57%;
    display: flex;
    flex-flow: column wrap;
    align-items:flex-start;
    gap: .9rem;
    margin: 0;
    padding: 1.5rem 0 1.3rem 2rem ;
    width: 18.6rem;

    opacity: 0;
    transform: scale(0.5);
    visibility: hidden;
}

/* Toggle Checkbox */
/* Clear checkboxes (boxe itself) */
input[type="checkbox"].toggle,
input[type="checkbox"].toggle-sound-music,
input[name="deck-number"] {
    opacity: 0;
    position: absolute;
    left: -90000px;
    top: -90000px;
}

/* Toggle Sound and Music */
.label-sound,
.label-music {
    display: grid;
    grid-template-rows: 1fr;
    grid-template-columns: repeat(2, 1fr);
}
.label-sound {
    margin-left: -.2rem;
}
.label-music {
    margin-left: -.1rem;
}
#sound-off,
#music-off,
#sound-on,
#music-on {
    grid-row: 1;
    grid-column: 1;
}
#sound-off,
#music-off {
    opacity: 0;
}
#sound-on,
#sound-off {
    margin-left: .05rem;
}
#music-off {
    margin-left: .05rem;
}
input[type="checkbox"]#toggle-sound:checked + label[for="toggle-sound"] img#sound-off,
input[type="checkbox"]#toggle-music:checked + label[for="toggle-music"] img#music-off {
    animation: sound-music-off 300ms ease forwards;
}
@keyframes sound-music-off {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}


/* toggle checkboxe - slider */
input[type="checkbox"].toggle + label {
    display: flex;
    align-items: center;
    position: relative;
}
input[type="checkbox"].toggle + label::before {
    content: "";
    width: 2rem;
    height: 1rem;
    background-color: rgb(235, 209, 209);
    border-radius: 5rem;
    margin-right: .8rem;
}
input[type="checkbox"].toggle + label::after {
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    color:  rgb(235, 209, 209);
    content: "\2715";
    font-size: .5rem;
    left: .1rem;
    width: .9rem;
    height: .9rem;
    background-color: rgb(201, 27, 27);
    background-image: linear-gradient(rgb(255, 0, 0), rgb(218, 19, 19), rgb(207, 20, 20), rgb(243, 15, 15));
    box-shadow: 0px 0px 2.5px 0px rgb(201, 27, 27);
    border-radius: 5rem;
    transition: 200ms ease-in-out;
}
input[type="checkbox"].toggle:checked + label::before {
    background-color: rgb(196, 241, 241);
}
input[type="checkbox"].toggle:checked + label::after {
    left: .9rem;
    background-image: linear-gradient(rgb(2, 170, 192), rgb(47, 139, 139), rgb(0, 155, 226));
    box-shadow: 0 0 2.5px 0 rgb(47, 139, 139);
    animation: check-fade 400ms ease-in-out forwards;
}
@keyframes check-fade {
    0% {
        opacity: 1;
        content: "\2715";
    }
    50% {
        opacity: 0;
        content: "\2715";
    }
    100% {
        opacity: 1;
        content: "\2713";
    }
}

/* Number of Decks */
.deck-list {
    margin: .5rem 0 1rem 0;
}
.deck-list legend {
    margin: 0 0 1.2rem 2.8rem;
}
.deck-list label {
    display: inline-block;
    margin-left: .13rem;
    width: 2.2rem;
    height: 2.2rem;
    padding: .45rem .7rem;
    background-image: linear-gradient(rgb(6, 179, 144), rgb(17, 180, 148), rgb(16, 168, 138), rgb(18, 146, 121));
    border: 1px solid rgb(6, 160, 129);
    border-radius: .5rem;
    box-shadow: 0 0 .1rem rgb(2, 177, 142);
}
input[type="radio"]:first-of-type + label {
    margin-left: .6rem;
}
input[type="radio"]:checked + label {
    animation: deck-number-chosen 200ms ease forwards;
}

@keyframes deck-number-chosen {
    0% {
        background-image: linear-gradient(rgb(6, 179, 144), rgb(17, 180, 148), rgb(16, 168, 138), rgb(18, 146, 121));
        border-color: rgb(15, 233, 189);
        box-shadow: 0 0 .1rem rgb(2, 177, 142);
        transform: scale(1);
    }
    100% {
        background-image: linear-gradient(rgb(11, 211, 171), rgb(23, 206, 169), rgb(27, 189, 156), rgb(27, 187, 155));
        border-color: rgb(14, 179, 146);
        box-shadow: 0 0 .1rem rgb(6, 231, 186);
        transform: scale(1.2);
    }
}

/* Warning about Settings */
.warning-about-settings {
    font-size: .7rem;
}

/* Close Settings Dialog */
.close-dialog-btn {
    margin: .8rem 0 .8rem 5rem;
    background-image: linear-gradient(rgba(131, 153, 104, 0.856), rgba(143, 163, 112, 0.87), rgba(154, 179, 120, 0.87), rgba(107, 122, 83, 0.815));
    border-color: rgba(148, 168, 116, 0.815);
    box-shadow: 0 0 1px rgb(99, 141, 79);
}
#dialog-closing {
    animation: close-dialog-box 100ms ease-out forwards;
}
@keyframes close-dialog-box {
    0% {
        opacity: 1;
        transform: scale(1);
        visibility: visible;  
    }
    100% {
        opacity: 0;
        transform: scale(0.5);
        visibility: hidden; 
    }
}


/* Rules Dialog Container */
.close-rules-dialog-btn {
    margin-left: 20rem;
}
.rules-dialog {
    width: 35rem;
    height: 25rem;
    font-weight: 600;
}
::-webkit-scrollbar {
    width: 12px;
}
::-webkit-scrollbar-track {
    border-radius: .7rem;
    background-color: rgba(0, 110, 59, 0.233);  
}
::-webkit-scrollbar-thumb {
    border-radius: .7rem;
    background-color: rgb(40, 131, 13); 
}
::-webkit-scrollbar-thumb:hover {
    background-color: rgb(28, 153, 17); 
}
::-webkit-scrollbar-thumb:active {
    background-color: rgb(25, 185, 33); 
}

/* Rules Styles */
.rules-dialog section {
    margin: 0 0 1.5rem 1rem;
    border: 1px dashed rgba(0, 110, 55, 0.322); 
    padding: .7rem;
    border-radius: .3rem;
    box-shadow: 0 0 .5rem rgba(0, 98, 110, 0.322);
    font-weight: 500;
    font-size: .95rem; 
    background-image: linear-gradient(rgba(8, 167, 135, 0.274), rgba(17, 180, 147, 0.267), rgba(16, 168, 138, 0.288), rgba(18, 146, 120, 0.363));
}
.rules-dialog h2 {
    text-align: center;
    color: rgb(194, 8, 8); 
    font-weight: bold;
    margin-bottom: 1rem;
}

.rules-dialog li,
.rules-dialog > section > p {
    margin: .2rem .8rem .9rem .8rem;
    color: rgb(34, 17, 4); 
}
.rules-dialog li {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    align-items: baseline;
}
.rules-dialog li p {
    grid-column: 5 / span 7;
    margin-top: .4rem; 
}
.rules-dialog li img {
    max-width: .5rem;
    margin-right: .45rem;
}
.rules-dialog li i {
    grid-column: 1 / span 3;
    font-weight: bold; 
    color: rgb(141, 63, 0);  
}









/* main */
.initial-layout {
    display: flex;
    flex-flow: column wrap;
    justify-content: center;
    align-items: center;
    margin-top: 5rem;
    gap: 3.5rem;
}
.game-logo {
    width: 15rem;
    margin-top: 1rem;
}
/* Initial page button effects */

.play {
    font-weight: bold;
    width: 13rem;
    height: 5rem;
    font-size: 2rem;
    border-radius: 20px;
    border: 1px solid goldenrod;
    background-image: linear-gradient(yellow, gold, rgb(241, 175, 8));
    transition: transform 0.2s ease;
}
.play:hover {
    background-image: linear-gradient(rgb(253, 237, 15), gold, rgb(255, 238, 0));
}



/*  */
.hidden {
    display: none;
}